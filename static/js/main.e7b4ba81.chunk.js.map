{"version":3,"sources":["ui/iconography/cake.svg","ui/iconography/email.svg","ui/iconography/github.svg","ui/iconography/linkedin.svg","ui/iconography/location.svg","ui/iconography/phone.svg","serviceWorker.ts","ui/Title.tsx","ui/MediumText.tsx","components/about-me/styles.ts","components/contact/styles.ts","components/contact/Contact.tsx","components/about-me/AboutMe.tsx","styles.ts","components/experience/experience-card/styles.ts","components/experience/experience-card/ExperienceCard.tsx","components/experience/experience-title/styles.ts","components/experience/experience-title/ExperienceTitle.tsx","components/experience/styles.ts","components/experience/lil-joke/styles.ts","components/experience/lil-joke/LilJoke.tsx","components/experience/Experience.tsx","Global.tsx","components/header/styles.ts","components/header/Header.tsx","components/skill-evaluation/styles.ts","components/skill-evaluation/HalfDot.tsx","components/skill-evaluation/SkillEvaluation.tsx","components/skills/styles.ts","components/skills/Skills.tsx","App.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","Title","styled","h2","MediumText","p","AboutMeWrapper","div","StyledTitle","ContactWrapper","ContactsText","IconWrapper","StyledIcon","img","Contact","iconText","icon","contact","alt","src","AboutMe","EmailSvg","PhoneSvg","LocationSvg","CakeSvg","GithubSvg","LinkedInSvg","Page","Content","SkillsEvaluationWrapper","SkillsWrapper","HorizontalBlock","ExperienceCardWrapper","noPaddingBottom","Role","ThinText","DescriptionList","ul","DescriptionItem","li","TimeAndPlaceWrapper","MiniDot","ExperienceCard","description","endYear","startYear","place","role","map","i","key","Dot","TitleWrapper","ExperienceTitle","title","ExperienceWrapper","LilJokeWrapper","DashedLine","Line","Joke","LilJoke","Experience","Global","styles","css","StyledHeader","header","Name","h1","Description","Header","color","HalfFilledDot","SkillEvaluationWrapper","SkillText","HalfDot","data-testid","SkillEvaluation","skill","evaluation","outOf","fractionalPart","hasHalfDot","filledDotsNumber","remainingDots","Array","fill","undefined","_","SkillsLine","AlignVertically","Skills","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e7b4ba81.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cake.2f8c6e07.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.b12f7240.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.a911c863.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.856ef867.svg\";","module.exports = __webpack_public_path__ + \"static/media/location.63dd9f35.svg\";","module.exports = __webpack_public_path__ + \"static/media/phone.83afdfbc.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  margin: 0;\n  font-size: 2rem;\n  text-transform: uppercase;\n`;\n\nexport default Title;\n","import styled from '@emotion/styled';\n\nexport const MediumText = styled.p`\n  margin: 0;\n  font-size: 1.5rem;\n`;\n\nexport default MediumText;\n","import { Title } from '../../ui';\nimport styled from '@emotion/styled';\n\nexport const AboutMeWrapper = styled.div`\n  margin-left: 2rem;\n  border-left: 0.1rem solid #e8e8e8;\n  padding-left: 1.5rem;\n  width: 27.5rem;\n`;\n\nexport const StyledTitle = styled(Title)`\n  margin-bottom: 1.5rem;\n`;\n","import styled from '@emotion/styled';\n\nexport const ContactWrapper = styled.div`\n  display: flex;\n  margin-bottom: 2.3rem;\n`;\n\nexport const ContactsText = styled.div`\n  margin: auto 0 auto 1rem;\n  font-size: 1.6rem;\n`;\n\nexport const IconWrapper = styled.div`\n  width: 2rem;\n  display: flex;\n`;\n\nexport const StyledIcon = styled.img`\n  margin: 0 auto;\n`;\n","import {\n  ContactWrapper,\n  ContactsText,\n  IconWrapper,\n  StyledIcon,\n} from './styles';\nimport React from 'react';\n\ntype ContactProps = {\n  icon: string;\n  contact: string;\n  iconText: string;\n};\n\nconst Contact: React.FC<ContactProps> = ({ iconText, icon, contact }) => {\n  return (\n    <ContactWrapper>\n      <IconWrapper>\n        <StyledIcon alt={iconText} src={icon} />\n      </IconWrapper>\n\n      <ContactsText>{contact}</ContactsText>\n    </ContactWrapper>\n  );\n};\n\nexport default Contact;\n","import { AboutMeWrapper, StyledTitle } from './styles';\nimport { Contact } from '../contact';\nimport CakeSvg from '../../ui/iconography/cake.svg';\nimport EmailSvg from '../../ui/iconography/email.svg';\nimport GithubSvg from '../../ui/iconography/github.svg';\nimport LinkedInSvg from '../../ui/iconography/linkedin.svg';\nimport LocationSvg from '../../ui/iconography/location.svg';\nimport PhoneSvg from '../../ui/iconography/phone.svg';\nimport React from 'react';\n\nconst AboutMe = () => {\n  return (\n    <AboutMeWrapper>\n      <StyledTitle>About me</StyledTitle>\n      <Contact\n        icon={EmailSvg}\n        iconText=\"email\"\n        contact=\"gabrielfmpires@gmail.com\"\n      />\n      <Contact\n        icon={PhoneSvg}\n        iconText=\"phone number\"\n        contact=\"+351 934429387\"\n      />\n      <Contact\n        icon={LocationSvg}\n        iconText=\"location\"\n        contact=\"Lisbon, Portugal\"\n      />\n      <Contact icon={CakeSvg} iconText=\"birthday\" contact=\"17 May 1997\" />\n      <Contact icon={GithubSvg} iconText=\"github\" contact=\"gabrielfmp\" />\n      <Contact\n        icon={LinkedInSvg}\n        iconText=\"linkedin\"\n        contact=\"gabrielfmpires\"\n      />\n    </AboutMeWrapper>\n  );\n};\n\nexport default AboutMe;\n","import styled from '@emotion/styled';\n\nexport const Page = styled.div`\n  display: block;\n  margin: 2rem auto;\n  box-shadow: 0 0 2rem rgba(0, 0, 0, 0.5);\n  width: 21cm;\n  height: 29.7cm;\n  background: white;\n`;\n\nexport const Content = styled.div`\n  margin: 2.3rem 2.7rem;\n`;\n\nexport const SkillsEvaluationWrapper = styled.div`\n  margin-top: 1rem;\n`;\n\nexport const SkillsWrapper = styled.div`\n  flex: 1;\n`;\n\nexport const HorizontalBlock = styled.div`\n  display: flex;\n  margin-top: 6rem;\n\n  :not(:first-of-type) {\n    margin-top: 7rem;\n  }\n`;\n","import styled from '@emotion/styled';\n\ntype ExperienceCardWrapperType = {\n  noPaddingBottom?: boolean;\n};\n\nexport const ExperienceCardWrapper = styled.div<ExperienceCardWrapperType>`\n  border-left: 0.1rem solid #000;\n  padding: ${({ noPaddingBottom }) =>\n    noPaddingBottom ? '0.8rem 0 0 1.4rem' : '0.8rem 0 2.3rem 1.4rem'};\n`;\n\nexport const Role = styled.p`\n  margin: 0;\n  font-size: 1.75rem;\n`;\n\nexport const ThinText = styled.p`\n  margin: 0;\n  font-size: 1.6rem;\n  font-weight: 200;\n`;\n\nexport const DescriptionList = styled.ul`\n  margin: 0;\n  padding-left: 1rem;\n  list-style: none;\n`;\n\nexport const DescriptionItem = styled.li`\n  margin-bottom: 0.2rem;\n  font-size: 1.5rem;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const TimeAndPlaceWrapper = styled.div`\n  display: flex;\n  margin: 0.2rem 0;\n`;\n\nexport const MiniDot = styled.div`\n  margin: auto 0.4rem;\n  border-radius: 50%;\n  width: 0.2rem;\n  height: 0.2rem;\n  background-color: #000;\n`;\n","import {\n  DescriptionItem,\n  DescriptionList,\n  ExperienceCardWrapper,\n  MiniDot,\n  Role,\n  ThinText,\n  TimeAndPlaceWrapper,\n} from './styles';\nimport React, { FunctionComponent } from 'react';\n\nconst ExperienceCard: FunctionComponent<{\n  description: Array<string>;\n  endYear?: number;\n  noPaddingBottom?: boolean;\n  place: string;\n  role: string;\n  startYear: number;\n}> = ({ description, endYear, noPaddingBottom, startYear, place, role }) => (\n  <ExperienceCardWrapper noPaddingBottom={noPaddingBottom}>\n    <Role>{role}</Role>\n\n    <TimeAndPlaceWrapper>\n      <ThinText>{place}</ThinText>\n      <MiniDot />\n      <ThinText>{`${startYear} - ${endYear || 'Present'}`}</ThinText>\n    </TimeAndPlaceWrapper>\n\n    <DescriptionList>\n      {description.map((description, i) => (\n        <DescriptionItem key={i}>{description}</DescriptionItem>\n      ))}\n    </DescriptionList>\n  </ExperienceCardWrapper>\n);\n\nexport default ExperienceCard;\n","import styled from '@emotion/styled';\n\nexport const Dot = styled.div`\n  margin: auto 1rem auto calc(-0.9rem / 2);\n  border-radius: 50%;\n  width: 0.9rem;\n  height: 0.9rem;\n  background-color: #000;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n`;\n","import { Dot, TitleWrapper } from './styles';\nimport { Title } from './../../../ui';\nimport React from 'react';\n\ntype ExperienceTitleProps = {\n  title: string;\n};\n\nconst ExperienceTitle: React.FC<ExperienceTitleProps> = ({ title }) => {\n  return (\n    <TitleWrapper>\n      <Dot />\n      <Title>{title}</Title>\n    </TitleWrapper>\n  );\n};\n\nexport default ExperienceTitle;\n","import styled from '@emotion/styled';\n\nexport const ExperienceWrapper = styled.div`\n  flex: 1;\n`;\n","import styled from '@emotion/styled';\n\n// I'm this close 🤏 to rename this component LilJokeRapper\nexport const LilJokeWrapper = styled.div`\n  display: flex;\n  margin-bottom: 2.6rem;\n`;\n\nexport const DashedLine = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Line = styled.div`\n  margin-top: 0.1rem;\n  width: 0.1rem;\n  background-color: #000;\n\n  &:nth-of-type(1) {\n    flex: 8;\n  }\n  &:nth-of-type(2) {\n    flex: 4;\n  }\n  &:nth-of-type(3) {\n    flex: 3;\n  }\n  &:nth-of-type(4) {\n    flex: 2;\n  }\n  &:nth-of-type(5) {\n    flex: 1;\n  }\n`;\n\nexport const Joke = styled.p`\n  margin: 1.9rem 0 0 1.4rem;\n  font-size: 1.25rem;\n  color: #e0e0e0;\n`;\n","import { DashedLine, Joke, LilJokeWrapper, Line } from './styles';\nimport React from 'react';\n\nconst LilJoke = () => (\n  <LilJokeWrapper>\n    {\n      // @TODO: This is a very naive approach, revise this later\n    }\n    <DashedLine>\n      <Line />\n      <Line />\n      <Line />\n      <Line />\n      <Line />\n    </DashedLine>\n\n    <Joke>Next? Your company maybe</Joke>\n  </LilJokeWrapper>\n);\n\nexport default LilJoke;\n","import { ExperienceCard } from './experience-card';\nimport { ExperienceTitle } from './experience-title';\nimport { ExperienceWrapper } from './styles';\nimport { LilJoke } from './lil-joke';\nimport React from 'react';\n\nconst Experience = () => {\n  return (\n    <ExperienceWrapper>\n      <ExperienceTitle title=\"Education\" />\n      <ExperienceCard\n        role=\"Computer Science and Engineering\"\n        place=\"Instituto Superior Técnico\"\n        startYear={2015}\n        endYear={2018}\n        description={[\n          'Python, C++, Java, C, Assembly, Prolog and more',\n          'Databases in PostgreSQL',\n          'Design patterns',\n          'Algorithms and data structures',\n        ]}\n      />\n\n      <ExperienceTitle title=\"Experience\" />\n      <ExperienceCard\n        role=\"Frontend Engineer\"\n        place=\"Farfetch\"\n        startYear={2018}\n        description={[\n          'Learning from experienced developers',\n          'Creating a platform and enhancing developer experience',\n          'Working remotely',\n          'Providing support to Harrods, Off-White and other e-commerce projects',\n          'Hosting events',\n        ]}\n        noPaddingBottom\n      />\n\n      <LilJoke />\n    </ExperienceWrapper>\n  );\n};\n\nexport default Experience;\n","import { Global as CoreGlobal, css } from '@emotion/core';\nimport React from 'react';\n\nexport const Global = () => (\n  <CoreGlobal\n    styles={() => css`\n      /*\n       * Flat out reset all elements and pseudo-elements for the often called \"universal box-sizing\".\n       */\n      *,\n      *::before,\n      *::after {\n        box-sizing: border-box;\n      }\n\n      html {\n        /*\n         * Reset font size to 10px on default browser settings, to ease the calculations to use rem units.\n         * It's used as 62.5% to adapt to changes in the browser's default font-size (which is typically 16px).\n         */\n        font-size: 62.5%;\n        /*\n         * Smooth anchor scrolling.\n         */\n        scroll-behavior: smooth;\n      }\n\n      /*\n       * It’s useful for the body to fill the viewport, even when empty.\n       * Allows a sticky footer when the content isn't enough.\n       */\n\n      body {\n        margin: 0;\n        background: rgb(204, 204, 204);\n        font-family: -apple-system, 'Helvetica Neue', BlinkMacSystemFont,\n          'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans',\n          'Droid Sans', sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n      }\n\n      code {\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n          monospace;\n      }\n\n      /*\n       * Again, allows a sticky footer when the content isn't enough.\n       */\n      body,\n      #root {\n        display: flex;\n        flex: 1 0 auto;\n        flex-direction: column;\n      }\n\n      /*\n       * Actually push the footer to stick it to the bottom\n       */\n      main {\n        flex-grow: 1;\n      }\n\n      /*\n       * Always ensure a link fits into its context and isn't a weird blue all the time.\n       */\n      a {\n        color: inherit;\n      }\n\n      /*\n       * Good old fluid images.\n       * Images set to be a block element because frankly, life is too short for that weird gap you get at the bottom.\n       */\n      img {\n        display: block;\n        max-width: 100%;\n      }\n    `}\n  />\n);\n","import styled from '@emotion/styled';\n\nexport const StyledHeader = styled.header`\n  display: flex;\n  flex-direction: row;\n  padding: 2.7rem 2.7rem 10rem 2.7rem;\n  background-color: #000;\n`;\n\nexport const Name = styled.h1`\n  flex: 2;\n  margin: 0;\n  font-size: 7.3rem;\n  text-align: right;\n  text-transform: uppercase;\n  color: #fff;\n`;\n\nexport const Description = styled.p`\n  flex: 1;\n  margin: 0;\n  font-size: 2rem;\n  text-align: left;\n  color: #fff;\n`;\n","import { Description, Name, StyledHeader } from './styles';\nimport React from 'react';\n\nconst Header = () => (\n  <StyledHeader>\n    <Description>\n      Hi! I’m a frontend engineer driven by inovation and meaningful\n      connections. I focus mainly on improving every user’s experience with\n      simple yet effective code,\n      <s>even though most of the time I’m solving bugs I created myself.</s>\n    </Description>\n\n    <Name>\n      Gabriel\n      <br />\n      Pires\n    </Name>\n  </StyledHeader>\n);\n\nexport default Header;\n","import { MediumText } from '../../ui';\nimport styled from '@emotion/styled';\n\ntype DotProps = {\n  color?: string;\n};\n\nexport const Dot = styled.div<DotProps>`\n  overflow: hidden;\n  margin: auto 1.2rem auto 0;\n  border-radius: 50%;\n  width: 0.6rem;\n  height: 0.6rem;\n  background-color: ${({ color }) => color};\n`;\n\nexport const HalfFilledDot = styled.div`\n  width: 50%;\n  height: 100%;\n  background-color: #000;\n`;\n\nexport const SkillEvaluationWrapper = styled.div`\n  display: flex;\n  margin-bottom: 0.8rem;\n`;\n\nexport const SkillText = styled(MediumText)`\n  flex: 1;\n`;\n","import { Dot, HalfFilledDot } from './styles';\nimport React from 'react';\n\nconst HalfDot = () => (\n  <Dot color=\"#BCBCBC\" data-testid=\"half-dot\">\n    <HalfFilledDot />\n  </Dot>\n);\n\nexport default HalfDot;\n","import { Dot, SkillEvaluationWrapper, SkillText } from './styles';\nimport HalfDot from './HalfDot';\nimport React, { FunctionComponent } from 'react';\n\ntype Props = {\n  skill: string;\n  evaluation: number;\n  outOf: number;\n};\n\nconst SkillEvaluation: FunctionComponent<Props> = ({\n  skill,\n  evaluation,\n  outOf,\n}) => {\n  // To know the 0.5 of 4.5\n  const fractionalPart = evaluation % 1;\n\n  // For simplicity, since I don't want to have 1.312 dots filled, when\n  // evaluation has a fractional part this components renders half dot\n  const hasHalfDot = !!fractionalPart;\n\n  // Make sure filledDotsNumber is integer\n  const filledDotsNumber = evaluation - fractionalPart;\n\n  // When we have an half dots, create one less grey dot\n  const remainingDots = hasHalfDot\n    ? outOf - filledDotsNumber - 1\n    : outOf - filledDotsNumber;\n\n  return (\n    <SkillEvaluationWrapper>\n      <SkillText>{skill}</SkillText>\n\n      {\n        // Making *filledDotsNumber* black dots\n        Array(filledDotsNumber)\n          .fill(undefined)\n          .map((_, i) => (\n            <Dot color=\"#000\" key={i} data-testid=\"filled-dot\" />\n          ))\n      }\n\n      {\n        // Making one half black half grey dots\n        hasHalfDot && <HalfDot />\n      }\n\n      {\n        // Making *remainingDots* grey dots\n        Array(remainingDots)\n          .fill(undefined)\n          .map((_, i) => (\n            <Dot color=\"#BCBCBC\" key={i} data-testid=\"empty-dot\" />\n          ))\n      }\n    </SkillEvaluationWrapper>\n  );\n};\n\nexport default SkillEvaluation;\n","import { MediumText } from '../../ui';\nimport styled from '@emotion/styled';\n\nexport const SkillsWrapper = styled.div`\n  display: flex;\n  margin-left: 2rem;\n  border-left: 0.1rem solid #e8e8e8;\n  padding-top: 3.5rem;\n  padding-left: 1.5rem;\n  width: 27.5rem;\n`;\n\nexport const SkillsLine = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const AlignVertically = styled.div`\n  flex: 1;\n  margin: auto 0;\n`;\n\nexport const SkillText = styled(MediumText)`\n  margin-bottom: 0.8rem;\n`;\n","import {\n  AlignVertically,\n  SkillText,\n  SkillsLine,\n  SkillsWrapper,\n} from './styles';\nimport React from 'react';\n\nconst Skills = () => {\n  return (\n    <SkillsWrapper>\n      <AlignVertically>\n        <SkillsLine>\n          <SkillText>Critical Thinking</SkillText>\n          <SkillText>Will to learn</SkillText>\n        </SkillsLine>\n\n        <SkillsLine>\n          <SkillText>English</SkillText>\n          <SkillText>Portuguese (native)</SkillText>\n          <SkillText>Spanish</SkillText>\n        </SkillsLine>\n\n        <SkillsLine>\n          <SkillText>Communication</SkillText>\n          <SkillText>Self-improvement</SkillText>\n        </SkillsLine>\n\n        <SkillsLine>\n          <SkillText>Creativity</SkillText>\n          <SkillText>Organization</SkillText>\n          <SkillText>Teamwork</SkillText>\n        </SkillsLine>\n      </AlignVertically>\n    </SkillsWrapper>\n  );\n};\n\nexport default Skills;\n","import { AboutMe } from './components/about-me';\nimport {\n  Content,\n  HorizontalBlock,\n  Page,\n  SkillsEvaluationWrapper,\n  SkillsWrapper,\n} from './styles';\nimport { Experience } from './components/experience';\nimport { Global } from './Global';\nimport { Header } from './components/header';\nimport { SkillEvaluation } from './components/skill-evaluation';\nimport { Skills } from './components/skills';\nimport { Title } from './ui';\nimport React from 'react';\n\nconst App = () => {\n  return (\n    <>\n      <Global />\n\n      <Page>\n        <Header />\n\n        <Content>\n          <HorizontalBlock>\n            <Experience />\n\n            <AboutMe />\n          </HorizontalBlock>\n\n          <HorizontalBlock>\n            <SkillsWrapper>\n              <Title>Skills</Title>\n              <SkillsEvaluationWrapper>\n                <SkillEvaluation skill=\"Javascript\" evaluation={5} outOf={5} />\n                <SkillEvaluation skill=\"HTML\" evaluation={3.5} outOf={5} />\n                <SkillEvaluation skill=\"CSS\" evaluation={4} outOf={5} />\n                <SkillEvaluation skill=\"React\" evaluation={4.5} outOf={5} />\n                <SkillEvaluation skill=\"Redux\" evaluation={5} outOf={5} />\n              </SkillsEvaluationWrapper>\n            </SkillsWrapper>\n\n            <Skills />\n          </HorizontalBlock>\n        </Content>\n      </Page>\n    </>\n  );\n};\n\nexport default App;\n","import * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}